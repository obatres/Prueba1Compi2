/*
 * Ejemplo desarrollado por Erick Navarro
 * Blog: e-navarro.blogspot.com
 * Julio - 2018
 */

package analizadores;
import java_cup.runtime.Symbol; 

%% 
%class Lexico
%public 
%line 
%char 
%cup 
%unicode
%ignorecase

%init{ 
    yyline = 1; 
    yychar = 1; 
%init} 

BLANCOS=[ \r\t]+
D=[0-9]+
DD=[0-9]+("."[  |0-9]+)?
CADENACOMILLASDOBLES = [\"]([^\"\n]|(\\\"))*[\"]
COMENTUNILINEA =("//".*\r\n)|("//".*\n)|("//".*\r)
COMENTMULTILINEA ="/*""/"*([^*/]|[^*]"/"|"*"[^/])*"*"*"*/"
ID=[A-Za-z]+["_"0-9A-Za-z]*
%%

"Evaluar" {return new Symbol(sym.REVALUAR,yyline,yychar, yytext());}
"Declara" {return new Symbol(sym.RDECLARA,yyline,yychar, yytext());}
"Entero"  {return new Symbol(sym.ENTEROT,yyline,yychar, yytext());}
"Cadena"  {return new Symbol(sym.CADENAT,yyline,yychar, yytext());}

";" {return new Symbol(sym.PTCOMA,yyline,yychar, yytext());} 
"(" {return new Symbol(sym.PARIZQ,yyline,yychar, yytext());} 
")" {return new Symbol(sym.PARDER,yyline,yychar, yytext());} 
"[" {return new Symbol(sym.CORIZQ,yyline,yychar, yytext());} 
"]" {return new Symbol(sym.CORDER,yyline,yychar, yytext());} 

"+" {return new Symbol(sym.MAS,yyline,yychar, yytext());} 
"-" {return new Symbol(sym.MENOS,yyline,yychar, yytext());} 
"*" {return new Symbol(sym.POR,yyline,yychar, yytext());} 
"/" {return new Symbol(sym.DIVIDIDO,yyline,yychar, yytext());} 
"=" {return new Symbol(sym.IGUAL,yyline,yychar, yytext());}
"^" {return new Symbol(sym.POTENCIA,yyline,yychar, yytext());}
"%%" {return new Symbol(sym.MODULO,yyline,yychar, yytext());}

"==" {return new Symbol(sym.IGUALD,yyline,yychar, yytext());}
">"  {return new Symbol(sym.MAYOR,yyline,yychar, yytext());}
"<"  {return new Symbol(sym.MENOR,yyline,yychar, yytext());}
">="  {return new Symbol(sym.MAYORIGUAL,yyline,yychar, yytext());}
"<="  {return new Symbol(sym.MENORIGUAL,yyline,yychar, yytext());}

"And"  {return new Symbol(sym.AND,yyline,yychar, yytext());}
"Or"   {return new Symbol(sym.OR,yyline,yychar, yytext());}
\n {yychar=1;}


{BLANCOS} {} 
{COMENTUNILINEA} {} 
{COMENTMULTILINEA} {}  
{ID} {return new Symbol(sym.IDENTIFICADOR,yyline,yychar, yytext());} 
{CADENACOMILLASDOBLES} {return new Symbol(sym.CADENA,yyline,yychar, (yytext()).substring(1,yytext().length()-1));} 
{D} {return new Symbol(sym.ENTERO,yyline,yychar, yytext());} 
{DD} {return new Symbol(sym.DECIMAL,yyline,yychar, yytext());} 

. {
    System.out.println("Este es un error lexico: "+yytext()+", en la linea: "
    +yyline+", en la columna: "+yychar);
}
